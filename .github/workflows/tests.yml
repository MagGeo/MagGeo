name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set Windows environment variables
      if: matrix.os == 'windows-latest'
      run: |
        echo "PYTHONIOENCODING=utf-8" >> $env:GITHUB_ENV
        echo "PYTHONUTF8=1" >> $env:GITHUB_ENV
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libproj-dev proj-data proj-bin libgeos-dev
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install proj geos
    
    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Windows dependencies are typically handled by conda-forge or pip wheels
        echo "Using pip wheels for Windows dependencies"
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pytest pytest-cov
    
    - name: Install MagGeo package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Install with longer timeout for Windows
        pip install -e . --timeout=300
    
    - name: Install MagGeo package (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        pip install -e .
    
    - name: Verify installation
      run: |
        python -c "import maggeo; print('MagGeo version:', maggeo.__version__)"
    
    - name: Run unit tests (excluding API-dependent tests)
      run: |
        pytest tests/ -v -m "not api" --tb=short
    
    - name: Run Windows stress test
      if: matrix.os == 'windows-latest'
      run: |
        python -c "import numpy; import pandas; import matplotlib; print('Core deps OK')"
        python -c "import maggeo.core; print('MagGeo core import OK')"
        python -c "import maggeo.gps; print('MagGeo GPS import OK')"
    
    - name: Run tests with coverage (Ubuntu Python 3.11 only)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: |
        pytest tests/ -v -m "not api" --cov=maggeo --cov-report=xml --cov-report=term-missing --tb=short
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
